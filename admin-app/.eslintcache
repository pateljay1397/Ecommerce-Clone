[{"B:\\Projects\\E-commerce\\admin-app\\src\\reportWebVitals.js":"1","B:\\Projects\\E-commerce\\admin-app\\src\\App.js":"2","B:\\Projects\\E-commerce\\admin-app\\src\\components\\Layout\\index.js":"3","B:\\Projects\\E-commerce\\admin-app\\src\\components\\Header\\index.js":"4","B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Home\\index.js":"5","B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Signin\\index.js":"6","B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Signup\\index.js":"7","B:\\Projects\\E-commerce\\admin-app\\src\\components\\UI\\Input\\index.js":"8","B:\\Projects\\E-commerce\\admin-app\\src\\index.js":"9","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\store\\index.js":"10","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\reducers\\index.js":"11","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\reducers\\auth.reducers.js":"12","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\auth.actions.js":"13","B:\\Projects\\E-commerce\\admin-app\\src\\helpers\\axios.js":"14","B:\\Projects\\E-commerce\\admin-app\\src\\urlConfig.js":"15","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\constants.js":"16","B:\\Projects\\E-commerce\\admin-app\\src\\components\\HOC\\PrivateRoute.js":"17","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\index.js":"18","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\user.actions.js":"19","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\reducers\\user.reducers.js":"20","B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Products\\index.js":"21","B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Orders\\index.js":"22","B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Category\\index.js":"23","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\category.action.js":"24","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\reducers\\category.reducer.js":"25","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\product.action.js":"26","B:\\Projects\\E-commerce\\admin-app\\src\\components\\UI\\Modal\\index.js":"27","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\reducers\\product.reducer.js":"28","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\initialData.action.js":"29"},{"size":362,"mtime":1606173228138,"results":"30","hashOfConfig":"31"},{"size":1412,"mtime":1607472108609,"results":"32","hashOfConfig":"31"},{"size":1141,"mtime":1607463552991,"results":"33","hashOfConfig":"31"},{"size":2378,"mtime":1607463385819,"results":"34","hashOfConfig":"31"},{"size":518,"mtime":1607123669599,"results":"35","hashOfConfig":"31"},{"size":1717,"mtime":1606760264252,"results":"36","hashOfConfig":"31"},{"size":2655,"mtime":1606779532673,"results":"37","hashOfConfig":"31"},{"size":484,"mtime":1607881511471,"results":"38","hashOfConfig":"31"},{"size":738,"mtime":1606759952828,"results":"39","hashOfConfig":"31"},{"size":221,"mtime":1606684037165,"results":"40","hashOfConfig":"31"},{"size":478,"mtime":1607362671171,"results":"41","hashOfConfig":"31"},{"size":1195,"mtime":1606780127547,"results":"42","hashOfConfig":"31"},{"size":1764,"mtime":1606779247525,"results":"43","hashOfConfig":"31"},{"size":1028,"mtime":1607988380129,"results":"44","hashOfConfig":"31"},{"size":157,"mtime":1607565881937,"results":"45","hashOfConfig":"31"},{"size":1280,"mtime":1607472318146,"results":"46","hashOfConfig":"31"},{"size":481,"mtime":1606781647762,"results":"47","hashOfConfig":"31"},{"size":209,"mtime":1607472097876,"results":"48","hashOfConfig":"31"},{"size":711,"mtime":1606770136823,"results":"49","hashOfConfig":"31"},{"size":710,"mtime":1606773272772,"results":"50","hashOfConfig":"31"},{"size":6891,"mtime":1607727051557,"results":"51","hashOfConfig":"31"},{"size":190,"mtime":1606782397916,"results":"52","hashOfConfig":"31"},{"size":12867,"mtime":1607981555377,"results":"53","hashOfConfig":"31"},{"size":1861,"mtime":1607987120759,"results":"54","hashOfConfig":"31"},{"size":1997,"mtime":1607905132874,"results":"55","hashOfConfig":"31"},{"size":210,"mtime":1607545972400,"results":"56","hashOfConfig":"31"},{"size":865,"mtime":1607973725613,"results":"57","hashOfConfig":"31"},{"size":367,"mtime":1607472552260,"results":"58","hashOfConfig":"31"},{"size":630,"mtime":1607540417668,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"h8ghpj",{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"65"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"74"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"78"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"74"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"78"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"74"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"74"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"65"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"65"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"65"},"B:\\Projects\\E-commerce\\admin-app\\src\\reportWebVitals.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\App.js",["130","131"],"import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\nimport Switch from \"react-bootstrap/esm/Switch\";\nimport Home from \"./containers/Home\";\nimport Signin from \"./containers/Signin\";\nimport Signup from \"./containers/Signup\";\nimport PrivateRoute from \"./components/HOC/PrivateRoute\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { isUserLoggedIn, getAllCategory } from \"./redux/actions\";\nimport Products from \"./containers/Products\";\nimport Orders from \"./containers/Orders\";\nimport Category from \"./containers/Category\";\nimport { getInitialData } from \"./redux/actions\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const auth = useSelector((state) => state.auth);\n\n  useEffect(() => {\n    if (!auth.authenticate) {\n      dispatch(isUserLoggedIn());\n    }\n    dispatch(getInitialData());\n  }, []);\n  return (\n    <div className=\"App\">\n      <Router>\n        <Switch>\n          <PrivateRoute path=\"/\" exact component={Home} />\n          <PrivateRoute path=\"/category\" component={Category} />\n          <PrivateRoute path=\"/products\" component={Products} />\n          <PrivateRoute path=\"/orders\" component={Orders} />\n          <Route path=\"/signin\" component={Signin}></Route>\n          <Route path=\"/signup\" component={Signup}></Route>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n",["132","133"],"B:\\Projects\\E-commerce\\admin-app\\src\\components\\Layout\\index.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\components\\Header\\index.js",["134"],"import React from \"react\";\r\nimport { Nav, Navbar, NavDropdown, Container } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { signout } from \"../../redux/actions\";\r\n\r\nconst Header = (props) => {\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n  const logout = () => {\r\n    dispatch(signout());\r\n  };\r\n\r\n  const renderLoggedInLinks = () => {\r\n    return (\r\n      <Nav>\r\n        <li className=\"nav-item\">\r\n          <span className=\"nav-link\" onClick={logout}>\r\n            Signout\r\n          </span>\r\n        </li>\r\n      </Nav>\r\n    );\r\n  };\r\n\r\n  const renderNonLoggedInLinks = () => {\r\n    return (\r\n      <Nav>\r\n        {/*<Nav.Link href=\"#deets\">Signin</Nav.Link>*/}\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"signin\" className=\"nav-link\">\r\n            Signin\r\n          </NavLink>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n          <NavLink to=\"signup\" className=\"nav-link\">\r\n            Signup\r\n          </NavLink>\r\n        </li>\r\n      </Nav>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Navbar\r\n      collapseOnSelect\r\n      fixed=\"top\"\r\n      expand=\"lg\"\r\n      bg=\"dark\"\r\n      variant=\"dark\"\r\n      style={{ zIndex: 1 }}\r\n    >\r\n      <Container fluid>\r\n        {/*<Navbar.Brand href=\"#home\">Admin Dashboard</Navbar.Brand>*/}\r\n        <Link to=\"/\" className=\"navbar-brand\">\r\n          Admin Dashboard\r\n        </Link>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            {/*<NavDropdown title=\"Dropdown\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item href=\"#action/3.1\">Action</NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.2\">\r\n                Another action\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item href=\"#action/3.3\">Something</NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item href=\"#action/3.4\">\r\n                Separated link\r\n              </NavDropdown.Item>\r\n              </NavDropdown>*/}\r\n          </Nav>\r\n          {auth.authenticate ? renderLoggedInLinks() : renderNonLoggedInLinks()}\r\n        </Navbar.Collapse>\r\n      </Container>\r\n    </Navbar>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Home\\index.js",["135","136","137","138","139"],"import React from \"react\";\r\nimport { Col, Container, Jumbotron, Row } from \"react-bootstrap\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport Layout from \"../../components/Layout\";\r\nimport \"./style.css\";\r\n\r\nconst Home = (props) => {\r\n  return (\r\n    <Layout sidebar>\r\n      \r\n      {/*<Jumbotron\r\n        style={{ margin: \"5rem\", background: \"#fff\" }}\r\n        className=\"text-center\"\r\n      >\r\n        <h1>Welcome to Admin Dashboard</h1>\r\n      </Jumbotron> */}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n",["140","141"],"B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Signin\\index.js",["142","143","144"],"import React, { useEffect, useState } from \"react\";\r\nimport { Button, Row, Col, Container, Form } from \"react-bootstrap\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport { login } from \"../../redux/actions\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\n\r\nconst Signin = (props) => {\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const auth = useSelector((state) => state.auth);\r\n  const dispatch = useDispatch();\r\n\r\n  const userLogin = (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      email,\r\n      password,\r\n    };\r\n    dispatch(login(user));\r\n  };\r\n\r\n  if (auth.authenticate) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row style={{ margin: \"50px\" }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Form onSubmit={userLogin}>\r\n              <Input\r\n                label=\"Email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                type=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <Input\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Signin;\r\n",["145","146"],"B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Signup\\index.js",["147","148"],"import React, { useState } from \"react\";\r\nimport { Button, Row, Col, Container, Form } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { Redirect } from \"react-router-dom\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport { signup } from \"../../redux/actions\";\r\n\r\nconst Signup = (props) => {\r\n  const [firstName, setFirstName] = useState(\"\");\r\n  const [lastName, setLastName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [error, setError] = useState(\"\");\r\n  const auth = useSelector((state) => state.auth);\r\n  const user = useSelector((state) => state.user);\r\n  const dispatch = useDispatch();\r\n\r\n  const userSignup = (e) => {\r\n    e.preventDefault();\r\n    const user = {\r\n      firstName,\r\n      lastName,\r\n      email,\r\n      password,\r\n    };\r\n    dispatch(signup(user));\r\n  };\r\n\r\n  if (user.loading) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n  if (auth.authenticate) {\r\n    return <Redirect to=\"/\" />;\r\n  }\r\n\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Row style={{ margin: \"50px\" }}>\r\n          <Col md={{ span: 6, offset: 3 }}>\r\n            <Form onSubmit={userSignup}>\r\n              <Row>\r\n                <Col md={6}>\r\n                  <Input\r\n                    label=\"First Name\"\r\n                    placeholder=\"First Name\"\r\n                    value={firstName}\r\n                    type=\"text\"\r\n                    onChange={(e) => setFirstName(e.target.value)}\r\n                  />\r\n                </Col>\r\n\r\n                <Col md={6}>\r\n                  <Input\r\n                    label=\"Last Name\"\r\n                    placeholder=\"Last Name\"\r\n                    value={lastName}\r\n                    type=\"text\"\r\n                    onChange={(e) => setLastName(e.target.value)}\r\n                  />\r\n                </Col>\r\n              </Row>\r\n              <Input\r\n                label=\"Email\"\r\n                placeholder=\"Email\"\r\n                value={email}\r\n                type=\"email\"\r\n                onChange={(e) => setEmail(e.target.value)}\r\n              />\r\n              <Input\r\n                label=\"Password\"\r\n                placeholder=\"Password\"\r\n                value={password}\r\n                type=\"password\"\r\n                onChange={(e) => setPassword(e.target.value)}\r\n              />\r\n              <Button variant=\"primary\" type=\"submit\">\r\n                Submit\r\n              </Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Signup;\r\n","B:\\Projects\\E-commerce\\admin-app\\src\\components\\UI\\Input\\index.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\index.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\store\\index.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\reducers\\index.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\reducers\\auth.reducers.js",["149","150"],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\auth.actions.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\helpers\\axios.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\urlConfig.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\constants.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\components\\HOC\\PrivateRoute.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\index.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\user.actions.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\reducers\\user.reducers.js",["151","152"],"B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Products\\index.js",["153"],"import React, { useState } from \"react\";\r\nimport { Col, Container, Row, Table } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport { addProduct } from \"../../redux/actions\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport { generatePublicUrl } from \"../../urlConfig\";\r\nimport \"./style.css\";\r\n\r\nconst Products = (props) => {\r\n  const [name, setName] = useState(\"\");\r\n  const [quantity, setQuantity] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [categoryId, setCategoryId] = useState(\"\");\r\n  const [productPictures, setProductPictures] = useState([]);\r\n  const [show, setShow] = useState(false);\r\n  const [productDetailModal, setProductDetailModal] = useState(false);\r\n  const [productDetails, setProductDetails] = useState(null);\r\n  const category = useSelector((state) => state.category);\r\n  const product = useSelector((state) => state.product);\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n    form.append(\"name\", name);\r\n    form.append(\"quantity\", quantity);\r\n    form.append(\"price\", price);\r\n    form.append(\"description\", description);\r\n    form.append(\"category\", categoryId);\r\n    for (let pic of productPictures) {\r\n      form.append(\"productPicture\", pic);\r\n    }\r\n    console.log(form);\r\n    dispatch(addProduct(form));\r\n    setShow(false);\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({ value: category._id, name: category.name });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n\r\n  const handleProductPictures = (e) => {\r\n    setProductPictures([...productPictures, e.target.files[0]]);\r\n  };\r\n\r\n  const renderProducts = () => {\r\n    return (\r\n      <Table style={{ fontSize: 12 }} responsive=\"sm\">\r\n        <thead>\r\n          <tr>\r\n            <th>#</th>\r\n            <th>Name</th>\r\n            <th>Price</th>\r\n            <th>Quantity</th>\r\n            <th>Category</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {product.products.length > 0\r\n            ? product.products.map((product) => (\r\n                <tr\r\n                  onClick={() => showProductDetailsModal(product)}\r\n                  key={product._id}\r\n                >\r\n                  <td>2</td>\r\n                  <td>{product.name}</td>\r\n                  <td>{product.price}</td>\r\n                  <td>{product.quantity}</td>\r\n                  <td>--</td>\r\n                </tr>\r\n              ))\r\n            : null}\r\n        </tbody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  //console.log(productPictures);\r\n  const renderAddProductModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Product\"}\r\n      >\r\n        <Input\r\n          label=\"Name\"\r\n          value={name}\r\n          placeholder={`Product Name`}\r\n          onChange={(e) => setName(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Quantity\"\r\n          value={quantity}\r\n          placeholder={`Quantity`}\r\n          onChange={(e) => setQuantity(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Price\"\r\n          value={price}\r\n          placeholder={`Price`}\r\n          onChange={(e) => setPrice(e.target.value)}\r\n        />\r\n        <Input\r\n          label=\"Description\"\r\n          value={description}\r\n          placeholder={`Description`}\r\n          onChange={(e) => setDescription(e.target.value)}\r\n        />\r\n        <select\r\n          className=\"form-control\"\r\n          value={categoryId}\r\n          onChange={(e) => setCategoryId(e.target.value)}\r\n        >\r\n          <option>Select Category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}{\" \"}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        {productPictures.length > 0\r\n          ? productPictures.map((pic, index) => (\r\n              <div key={index}>{pic.name}</div>\r\n            ))\r\n          : null}\r\n        <input\r\n          type=\"file\"\r\n          name=\"productPicture\"\r\n          onChange={handleProductPictures}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n  const handleCloseProductDetailsModal = () => {\r\n    setProductDetailModal(false);\r\n  };\r\n  const showProductDetailsModal = (product) => {\r\n    setProductDetails(product);\r\n    setProductDetailModal(true);\r\n  };\r\n\r\n  const renderProductDetailsModal = () => {\r\n    if (!productDetails) {\r\n      return null;\r\n    }\r\n    return (\r\n      <Modal\r\n        show={productDetailModal}\r\n        handleClose={handleCloseProductDetailsModal}\r\n        modalTitle={\"Product Details\"}\r\n        size=\"lg\"\r\n      >\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Name</label>\r\n            <p className=\"value\">{productDetails.name}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Price</label>\r\n            <p className=\"value\">{productDetails.price}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Quantity</label>\r\n            <p className=\"value\">{productDetails.quantity}</p>\r\n          </Col>\r\n          <Col md=\"6\">\r\n            <label className=\"key\">Category</label>\r\n            <p className=\"value\">--</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md=\"12\">\r\n            <label className=\"key\">Description</label>\r\n            <p className=\"value\">{productDetails.description}</p>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <label className=\"key\">Product Pictures :</label>\r\n            <div style={{ display: \"flex\" }}>\r\n              {productDetails.productPictures.map((picture) => (\r\n                <div className=\"productImgContainer\">\r\n                  <img src={generatePublicUrl(picture.img)} />\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Products</h3>\r\n              <button onClick={handleShow}>Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>{renderProducts()}</Col>\r\n        </Row>\r\n      </Container>\r\n      {renderAddProductModal()}\r\n      {renderProductDetailsModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Products;\r\n","B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Orders\\index.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\containers\\Category\\index.js",["154","155","156","157","158","159","160"],"import React, { useEffect, useState } from \"react\";\r\nimport { Col, Container, Row } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Layout from \"../../components/Layout\";\r\nimport Input from \"../../components/UI/Input\";\r\nimport Modal from \"../../components/UI/Modal\";\r\nimport {\r\n  addCategory,\r\n  getAllCategory,\r\n  updateCategories,\r\n  deleteCategories as deleteCategoriesAction,\r\n} from \"../../redux/actions\";\r\nimport CheckboxTree from \"react-checkbox-tree\";\r\nimport {\r\n  IoIosCheckboxOutline,\r\n  IoIosCheckbox,\r\n  IoIosArrowForward,\r\n  IoIosArrowDown,\r\n} from \"react-icons/io\";\r\nimport \"react-checkbox-tree/lib/react-checkbox-tree.css\";\r\n\r\nconst Category = (props) => {\r\n  const category = useSelector((state) => state.category);\r\n  const [categoryName, setCategoryName] = useState(\"\");\r\n  const [parentCategoryId, setParentCategoryId] = useState(\"\");\r\n  const [categoryImage, setCategoryImage] = useState(\"\");\r\n  const [show, setShow] = useState(false);\r\n  const [checked, setChecked] = useState([]);\r\n  const [expanded, setExpanded] = useState([]);\r\n  const [checkedArray, setCheckedArray] = useState([]);\r\n  const [expandedArray, setExpandedArray] = useState([]);\r\n  const [updateCategoryModal, setUpdateCategoryModal] = useState(false);\r\n  const [deleteCategoryModal, setDeleteCategoryModal] = useState(false);\r\n  const dispatch = useDispatch();\r\n  //console.log(category.categories);\r\n\r\n  //we added empty array for the component did mount check\r\n\r\n  const handleClose = () => {\r\n    const form = new FormData();\r\n\r\n    form.append(\"name\", categoryName);\r\n    form.append(\"parentId\", parentCategoryId);\r\n    form.append(\"categoryImage\", categoryImage);\r\n    dispatch(addCategory(form));\r\n    // const cat = {\r\n    //   categoryName,\r\n    //   parentCategoryId,\r\n    //   categoryImage,\r\n    // };\r\n    setShow(false);\r\n    setCategoryName(\"\");\r\n    setParentCategoryId(\"\");\r\n  };\r\n  const handleShow = () => setShow(true);\r\n\r\n  const renderCategories = (categories) => {\r\n    let myCategories = [];\r\n    // console.log(categories);\r\n    for (let category of categories) {\r\n      myCategories.push({\r\n        label: category.name,\r\n        value: category._id,\r\n        children:\r\n          category.children.length > 0 && renderCategories(category.children),\r\n      });\r\n    }\r\n    return myCategories;\r\n  };\r\n\r\n  const createCategoryList = (categories, options = []) => {\r\n    for (let category of categories) {\r\n      options.push({\r\n        value: category._id,\r\n        name: category.name,\r\n        parentId: category.parentId,\r\n      });\r\n      if (category.children.length > 0) {\r\n        createCategoryList(category.children, options);\r\n      }\r\n    }\r\n    return options;\r\n  };\r\n\r\n  const handleCategoryImage = (e) => {\r\n    setCategoryImage(e.target.files[0]);\r\n  };\r\n\r\n  const updateCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setUpdateCategoryModal(true);\r\n  };\r\n\r\n  const updateCheckedAndExpandedCategories = () => {\r\n    const categories = createCategoryList(category.categories);\r\n    const checkedArray = [];\r\n    const expandedArray = [];\r\n\r\n    checked.length > 0 &&\r\n      checked.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId == category.value\r\n        );\r\n        category && checkedArray.push(category);\r\n      });\r\n\r\n    expanded.length > 0 &&\r\n      expanded.forEach((categoryId, index) => {\r\n        const category = categories.find(\r\n          (category, _index) => categoryId == category.value\r\n        );\r\n        category && expandedArray.push(category);\r\n      });\r\n\r\n    setCheckedArray(checkedArray);\r\n    setExpandedArray(expandedArray);\r\n    // console.log({ checked, expanded, categories, checkedArray, expandedArray });\r\n  };\r\n\r\n  const handleCategoryInput = (key, value, index, type) => {\r\n    if (type == \"checked\") {\r\n      const updatedcheckedArray = checkedArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setCheckedArray(updatedcheckedArray);\r\n    } else if (type == \"expanded\") {\r\n      const updatedExpandedArray = expandedArray.map((item, _index) =>\r\n        index == _index ? { ...item, [key]: value } : item\r\n      );\r\n      setExpandedArray(updatedExpandedArray);\r\n    }\r\n  };\r\n\r\n  const updateCategoriesForm = () => {\r\n    const form = new FormData();\r\n    expandedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n\r\n    checkedArray.forEach((item, index) => {\r\n      form.append(\"_id\", item.value);\r\n      form.append(\"name\", item.name);\r\n      form.append(\"parentId\", item.parentId ? item.parentId : \"\");\r\n      form.append(\"type\", item.type);\r\n    });\r\n\r\n    dispatch(updateCategories(form)).then((result) => {\r\n      if (result) {\r\n        dispatch(getAllCategory());\r\n      }\r\n    });\r\n    setUpdateCategoryModal(false);\r\n  };\r\n\r\n  const renderUpdatedCategoriesModal = () => {\r\n    return (\r\n      <Modal\r\n        show={updateCategoryModal}\r\n        handleClose={updateCategoriesForm}\r\n        modalTitle={\"Update Categories\"}\r\n        size=\"lg\"\r\n      >\r\n        <Row>\r\n          <Col>\r\n            <h6>Expanded</h6>\r\n          </Col>\r\n        </Row>\r\n\r\n        {expandedArray.length > 0 &&\r\n          expandedArray.map((item, index) => (\r\n            <Row key={index}>\r\n              <Col>\r\n                <Input\r\n                  value={item.name}\r\n                  placeholder={`Category Name`}\r\n                  onChange={(e) =>\r\n                    handleCategoryInput(\r\n                      \"name\",\r\n                      e.target.value,\r\n                      index,\r\n                      \"expanded\"\r\n                    )\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <select\r\n                  className=\"form-control\"\r\n                  value={item.parentId}\r\n                  onChange={(e) =>\r\n                    handleCategoryInput(\r\n                      \"parentId\",\r\n                      e.target.value,\r\n                      index,\r\n                      \"expanded\"\r\n                    )\r\n                  }\r\n                >\r\n                  <option>Select Category</option>\r\n                  {createCategoryList(category.categories).map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                      {option.name}{\" \"}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </Col>\r\n              <Col>\r\n                <select className=\"form-control\">\r\n                  <option value=\"\">Select Type</option>\r\n                  <option value=\"store\">Store</option>\r\n                  <option value=\"prodcut\">Product</option>\r\n                  <option value=\"page\">Page</option>\r\n                </select>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        {/*Checked*/}\r\n        <h6>Checked Categories</h6>\r\n        {checkedArray.length > 0 &&\r\n          checkedArray.map((item, index) => (\r\n            <Row key={index}>\r\n              <Col>\r\n                <Input\r\n                  value={item.name}\r\n                  placeholder={`Category Name`}\r\n                  onChange={(e) =>\r\n                    handleCategoryInput(\r\n                      \"name\",\r\n                      e.target.value,\r\n                      index,\r\n                      \"checked\"\r\n                    )\r\n                  }\r\n                />\r\n              </Col>\r\n              <Col>\r\n                <select\r\n                  className=\"form-control\"\r\n                  value={item.parentId}\r\n                  onChange={(e) =>\r\n                    handleCategoryInput(\r\n                      \"parentId\",\r\n                      e.target.value,\r\n                      index,\r\n                      \"checked\"\r\n                    )\r\n                  }\r\n                >\r\n                  <option>Select Category</option>\r\n                  {createCategoryList(category.categories).map((option) => (\r\n                    <option key={option.value} value={option.value}>\r\n                      {option.name}{\" \"}\r\n                    </option>\r\n                  ))}\r\n                </select>\r\n              </Col>\r\n              <Col>\r\n                <select className=\"form-control\">\r\n                  <option value=\"\">Select Type</option>\r\n                  <option value=\"store\">Store</option>\r\n                  <option value=\"prodcut\">Product</option>\r\n                  <option value=\"page\">Page</option>\r\n                </select>\r\n              </Col>\r\n            </Row>\r\n          ))}\r\n        <input\r\n          type=\"file\"\r\n          name=\"categoryImage\"\r\n          onChange={handleCategoryImage}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const renderAddCategoryModal = () => {\r\n    return (\r\n      <Modal\r\n        show={show}\r\n        handleClose={handleClose}\r\n        modalTitle={\"Add New Category\"}\r\n      >\r\n        <Input\r\n          value={categoryName}\r\n          placeholder={`Category Name`}\r\n          onChange={(e) => setCategoryName(e.target.value)}\r\n        />\r\n        <select\r\n          className=\"form-control\"\r\n          value={parentCategoryId}\r\n          onChange={(e) => setParentCategoryId(e.target.value)}\r\n        >\r\n          <option>Select Category</option>\r\n          {createCategoryList(category.categories).map((option) => (\r\n            <option key={option.value} value={option.value}>\r\n              {option.name}{\" \"}\r\n            </option>\r\n          ))}\r\n        </select>\r\n        <input\r\n          type=\"file\"\r\n          name=\"categoryImage\"\r\n          onChange={handleCategoryImage}\r\n        />\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  const deleteCategory = () => {\r\n    updateCheckedAndExpandedCategories();\r\n    setDeleteCategoryModal(true);\r\n  };\r\n\r\n  const deleteCategories = () => {\r\n    const checkedIdsArray = checkedArray.map((item, index) => ({\r\n      _id: item.value,\r\n    }));\r\n    const expandedIdsArray = expandedArray.map((item, index) => ({\r\n      _id: item.value,\r\n    }));\r\n\r\n    const idsArray = expandedIdsArray.concat(checkedIdsArray);\r\n    dispatch(deleteCategoriesAction(idsArray)).then((result) => {\r\n      if (result) {\r\n        dispatch(getAllCategory());\r\n        setDeleteCategoryModal(false);\r\n      }\r\n    });\r\n  };\r\n\r\n  const renderDeleteCategoryModal = () => {\r\n    return (\r\n      <Modal\r\n        modalTitle=\"Confirm\"\r\n        show={deleteCategoryModal}\r\n        handleClose={() => setDeleteCategoryModal(false)}\r\n        buttons={[\r\n          {\r\n            label: \"No\",\r\n            color: \"primary\",\r\n            onClick: () => {\r\n              alert(\"no\");\r\n            },\r\n          },\r\n          {\r\n            label: \"Yes\",\r\n            color: \"danger\",\r\n            onClick: deleteCategories,\r\n          },\r\n        ]}\r\n      >\r\n        <h5>Expanded</h5>\r\n        {expandedArray.map((item, index) => (\r\n          <span key={index}>{item.name}</span>\r\n        ))}\r\n        <h5>Checked</h5>\r\n        {checkedArray.map((item, index) => (\r\n          <span key={index}>{item.name}</span>\r\n        ))}\r\n      </Modal>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Layout sidebar>\r\n      <Container>\r\n        <Row>\r\n          <Col md={12}>\r\n            <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\r\n              <h3>Category</h3>\r\n              <button onClick={handleShow}> Add</button>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={12}>\r\n            {/* <ul>\r\n              {renderCategories(category.categories)}\r\n             </ul>*/}\r\n            <CheckboxTree\r\n              nodes={renderCategories(category.categories)}\r\n              checked={checked}\r\n              expanded={expanded}\r\n              onCheck={(checked) => setChecked(checked)}\r\n              onExpand={(expanded) => setExpanded(expanded)}\r\n              icons={{\r\n                check: <IoIosCheckbox />,\r\n                uncheck: <IoIosCheckboxOutline />,\r\n                halfCheck: <IoIosCheckboxOutline />,\r\n                expandClose: <IoIosArrowForward />,\r\n                expandOpen: <IoIosArrowDown />,\r\n              }}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <button onClick={deleteCategory}>Delete</button>\r\n            <button onClick={updateCategory}>Edit</button>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      {/* add category*/}\r\n      {renderAddCategoryModal()}\r\n      {/* Edit categories*/}\r\n      {renderUpdatedCategoriesModal()}\r\n      {/*Delete Category*/}\r\n      {renderDeleteCategoryModal()}\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Category;\r\n","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\category.action.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\reducers\\category.reducer.js",["161","162","163","164"],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\product.action.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\components\\UI\\Modal\\index.js",[],"B:\\Projects\\E-commerce\\admin-app\\src\\redux\\reducers\\product.reducer.js",["165","166"],"import { productConstants } from \"../actions/constants\";\r\n\r\nconst initialState = {\r\n  products: [],\r\n};\r\n\r\nexport default (state= initialState, action) => {\r\n  switch (action.type) {\r\n    case productConstants.GET_ALL_PRODUCTS_SUCCESS:\r\n      state = {\r\n        ...state,\r\n        products: action.payload.products,\r\n      };\r\n      break;\r\n  }\r\n  return state;\r\n};\r\n","B:\\Projects\\E-commerce\\admin-app\\src\\redux\\actions\\initialData.action.js",["167"],"import {\r\n  categoryConstants,\r\n  initialDataConstants,\r\n  productConstants,\r\n} from \"./constants\";\r\nimport axios from \"../../helpers/axios\";\r\n\r\nexport const getInitialData = () => {\r\n  return async (dispatch) => {\r\n    const res = await axios.post(`/initialData`);\r\n    if (res.status === 200) {\r\n      const { categories, products } = res.data;\r\n      dispatch({\r\n        type: categoryConstants.GET_ALL_CATEGORIES_SUCESS,\r\n        payload: { categories },\r\n      });\r\n      dispatch({\r\n        type: productConstants.GET_ALL_PRODUCTS_SUCCESS,\r\n        payload: { products },\r\n      });\r\n    }\r\n    console.log(res);\r\n  };\r\n};\r\n",{"ruleId":"168","severity":1,"message":"169","line":10,"column":26,"nodeType":"170","messageId":"171","endLine":10,"endColumn":40},{"ruleId":"172","severity":1,"message":"173","line":25,"column":6,"nodeType":"174","endLine":25,"endColumn":8,"suggestions":"175"},{"ruleId":"176","replacedBy":"177"},{"ruleId":"178","replacedBy":"179"},{"ruleId":"168","severity":1,"message":"180","line":2,"column":23,"nodeType":"170","messageId":"171","endLine":2,"endColumn":34},{"ruleId":"168","severity":1,"message":"181","line":2,"column":10,"nodeType":"170","messageId":"171","endLine":2,"endColumn":13},{"ruleId":"168","severity":1,"message":"182","line":2,"column":15,"nodeType":"170","messageId":"171","endLine":2,"endColumn":24},{"ruleId":"168","severity":1,"message":"183","line":2,"column":26,"nodeType":"170","messageId":"171","endLine":2,"endColumn":35},{"ruleId":"168","severity":1,"message":"184","line":2,"column":37,"nodeType":"170","messageId":"171","endLine":2,"endColumn":40},{"ruleId":"168","severity":1,"message":"185","line":3,"column":10,"nodeType":"170","messageId":"171","endLine":3,"endColumn":17},{"ruleId":"176","replacedBy":"186"},{"ruleId":"178","replacedBy":"187"},{"ruleId":"168","severity":1,"message":"188","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"168","severity":1,"message":"189","line":12,"column":10,"nodeType":"170","messageId":"171","endLine":12,"endColumn":15},{"ruleId":"168","severity":1,"message":"190","line":12,"column":17,"nodeType":"170","messageId":"171","endLine":12,"endColumn":25},{"ruleId":"176","replacedBy":"191"},{"ruleId":"178","replacedBy":"192"},{"ruleId":"168","severity":1,"message":"189","line":14,"column":10,"nodeType":"170","messageId":"171","endLine":14,"endColumn":15},{"ruleId":"168","severity":1,"message":"190","line":14,"column":17,"nodeType":"170","messageId":"171","endLine":14,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":18,"column":1,"nodeType":"195","endLine":57,"endColumn":3},{"ruleId":"196","severity":1,"message":"197","line":20,"column":3,"nodeType":"198","messageId":"199","endLine":55,"endColumn":4},{"ruleId":"193","severity":1,"message":"194","line":9,"column":1,"nodeType":"195","endLine":33,"endColumn":3},{"ruleId":"196","severity":1,"message":"197","line":10,"column":3,"nodeType":"198","messageId":"199","endLine":31,"endColumn":4},{"ruleId":"200","severity":1,"message":"201","line":195,"column":19,"nodeType":"202","endLine":195,"endColumn":63},{"ruleId":"168","severity":1,"message":"188","line":1,"column":17,"nodeType":"170","messageId":"171","endLine":1,"endColumn":26},{"ruleId":"203","severity":1,"message":"204","line":102,"column":44,"nodeType":"205","messageId":"206","endLine":102,"endColumn":46},{"ruleId":"203","severity":1,"message":"204","line":110,"column":44,"nodeType":"205","messageId":"206","endLine":110,"endColumn":46},{"ruleId":"203","severity":1,"message":"204","line":121,"column":14,"nodeType":"205","messageId":"206","endLine":121,"endColumn":16},{"ruleId":"203","severity":1,"message":"204","line":123,"column":15,"nodeType":"205","messageId":"206","endLine":123,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":126,"column":21,"nodeType":"205","messageId":"206","endLine":126,"endColumn":23},{"ruleId":"203","severity":1,"message":"204","line":128,"column":15,"nodeType":"205","messageId":"206","endLine":128,"endColumn":17},{"ruleId":"203","severity":1,"message":"204","line":11,"column":16,"nodeType":"205","messageId":"206","endLine":11,"endColumn":18},{"ruleId":"203","severity":1,"message":"204","line":24,"column":17,"nodeType":"205","messageId":"206","endLine":24,"endColumn":19},{"ruleId":"193","severity":1,"message":"194","line":52,"column":1,"nodeType":"195","endLine":86,"endColumn":3},{"ruleId":"196","severity":1,"message":"197","line":53,"column":3,"nodeType":"198","messageId":"199","endLine":84,"endColumn":4},{"ruleId":"193","severity":1,"message":"194","line":7,"column":1,"nodeType":"195","endLine":17,"endColumn":3},{"ruleId":"196","severity":1,"message":"197","line":8,"column":3,"nodeType":"198","messageId":"199","endLine":15,"endColumn":4},{"ruleId":"168","severity":1,"message":"207","line":3,"column":3,"nodeType":"170","messageId":"171","endLine":3,"endColumn":23},"no-unused-vars","'getAllCategory' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'auth.authenticate' and 'dispatch'. Either include them or remove the dependency array.","ArrayExpression",["208"],"no-native-reassign",["209"],"no-negated-in-lhs",["210"],"'NavDropdown' is defined but never used.","'Col' is defined but never used.","'Container' is defined but never used.","'Jumbotron' is defined but never used.","'Row' is defined but never used.","'NavLink' is defined but never used.",["209"],["210"],"'useEffect' is defined but never used.","'error' is assigned a value but never used.","'setError' is assigned a value but never used.",["209"],["210"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'initialDataConstants' is defined but never used.",{"desc":"211","fix":"212"},"no-global-assign","no-unsafe-negation","Update the dependencies array to be: [auth.authenticate, dispatch]",{"range":"213","text":"214"},[895,897],"[auth.authenticate, dispatch]"]